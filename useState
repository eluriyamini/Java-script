React Hooks:
---introduced on react 16.8 version.
---to manage state and life cycle features in functional components.
State: is an essential part in react because it allows components to be dynamic, interactive and capable of responding to user input or change over time.
1)useStateHook:
2)useState :  allows you to add state to functional components.
syntax:
const[state, setState]=useState(initial value)
State: this is a current state
setState: this is a function to update the state.
initial Value: : the value you want to set as the initial value.
#button
#onClick
/ USE STATE
// const Counter=()=>{
//   const[count,setCount]=useState(0);
//   // current state =count
//   // fnction to update state=setCount
//   // use state to initialize the state=0
//   return(
//     <div>
//       <h1>{count}</h1>
//       <button onClick={() =>setCount(count+1)}>Increment</button>
//       <button onClick={() =>setCount(count-1)}>Decrement</button>
//     </div>
//   );
// }
// export default Counter;

import React,{useState} from 'react';
const ThemeToggler=()=>{
  const[theme,setTheme]=useState('light')
  
  const toggleTheme=()=>{
    setTheme(prevTheme=>(prevTheme=='light'?'dark':'light'));

  }
  return(
    <div style={{backgroundColour:theme=='light'?'white':'black',color:theme=='light'?'black':'white' ,textAlign:'center'}}>
      <h1>the curent theme is{theme}</h1>
      <button onClick={toggleTheme}>toggleTheme</button>

    </div>
  )
};
export default ThemeToggler;
